Logging in
---------HERE---------
HTTP::Response.new(status-line => "500 Internal Server Error", code => 500, request => HTTP::Request.new(method => "POST", url => "http://pt.lacunaexpanse.com/empire", file => "/empire", uri => URI.new(grammar => IETF::RFC_Grammar.new(rfc => "rfc3986", grammar => IETF::RFC_Grammar::URI, parse_result => Match.new(ast => Any, list => (), hash => Map.new((:URI-reference(Match.new(ast => Any, list => (), hash => Map.new((:URI(Match.new(ast => Any, list => (), hash => Map.new((:hier-part(Match.new(ast => Any, list => (), hash => Map.new((:authority(Match.new(ast => Any, list => (), hash => Map.new((:host(Match.new(ast => Any, list => (), hash => Map.new((:reg-name(Match.new(ast => Any, list => (), hash => Map.new(()), orig => "http://pt.lacunaexpanse.com/empire", to => 27, from => 7)))), orig => "http://pt.lacunaexpanse.com/empire", to => 27, from => 7)))), orig => "http://pt.lacunaexpanse.com/empire", to => 27, from => 7)),:path-abempty(Match.new(ast => Any, list => (), hash => Map.new((:segment([Match.new(ast => Any, list => (), hash => Map.new(()), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 28)]))), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 27)))), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 5)),:scheme(Match.new(ast => Any, list => (), hash => Map.new(()), orig => "http://pt.lacunaexpanse.com/empire", to => 4, from => 0)))), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 0)))), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 0)))), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 0)), match-prefix => Bool::False, segments => [Match.new(ast => Any, list => (), hash => Map.new(()), orig => "http://pt.lacunaexpanse.com/empire", to => 34, from => 28)]), host => "pt.lacunaexpanse.com", port => 80, scheme => "http", header => HTTP::Header.new(fields => [HTTP::Header::Field.new(name => "Host", values => ["pt.lacunaexpanse.com"]), HTTP::Header::Field.new(name => "Content-Length", values => ["79"]), HTTP::Header::Field.new(name => "Content-Type", values => ["application/x-www-form-urlencoded"]), HTTP::Header::Field.new(name => "Connection", values => ["close"])]), content => utf8.new(109, 101, 116, 104, 111, 100, 61, 103, 101, 116, 95, 115, 116, 97, 116, 117, 115, 38, 105, 100, 61, 52, 50, 38, 106, 115, 111, 110, 114, 112, 99, 61, 50, 46, 48, 38, 112, 97, 114, 97, 109, 115, 61, 50, 55, 57, 49, 50, 48, 100, 99, 45, 102, 102, 56, 54, 45, 52, 97, 51, 97, 45, 97, 53, 101, 48, 45, 55, 54, 97, 56, 102, 51, 100, 49, 51, 56, 55, 48), protocol => "HTTP/1.1", binary => Bool, text-types => Array[Str].new()), header => HTTP::Header.new(fields => [HTTP::Header::Field.new(name => "Server", values => ["nginx/1.4.7"]), HTTP::Header::Field.new(name => "Date", values => ["Mon", "21 Mar 2016 19:51:50 GMT"]), HTTP::Header::Field.new(name => "Content-Type", values => ["application/json-rpc"]), HTTP::Header::Field.new(name => "Content-Length", values => ["155"]), HTTP::Header::Field.new(name => "Connection", values => ["close"])]), content => "\{\"jsonrpc\":\"2.0\",\"error\":\{\"data\":\"method=get_status\&id=42\&jsonrpc=2.0\&params=279120dc-ff86-4a3a-a5e0-76a8f3d13870\",\"message\":\"Parse error.\",\"code\":-32700}}", protocol => "HTTP/1.1", binary => Bool::False, text-types => Array[Str].new())
