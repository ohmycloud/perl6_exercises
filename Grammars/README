
I've been getting a little lost on how Grammars work, and I think it's due to 
me not understanding the Actions aspect.

    A Grammar is a set of rules to match a string.  A class for regexes.

    A Grammar can also modify its matched string using Actions.



Tutorials {#{{{

    There's an advent calendar exercise on Grammars and Actions here:
        https://perl6advent.wordpress.com/2009/12/21/day-21-grammars-and-actions/   


    dr_forr/
        DrForr (Jeff Goff) has a (planned) 6-part blog on Grammars.
        I've gone through parts 1 and 2 as of 02/19.  Come back and go through 
        the rest as he writes them.
        http://theperlfisher.blogspot.ro/2016/02/from-regular-expressions-to-grammars-pt.html

        Working through part 3.

}#}}}
Rules of Grammar {#{{{

    This isn't being spelled out anywhere, it's the best I'm able to derive 
    from observation.
    
    - The TOP rule runs automatically when we try to parse a string with the 
      Grammar

    - A rule is made up of other rules and tokens.
        - Whitespace is important for rules.
        - :sigspace is on.

    - A token is meant to be more atomic than a rule, though a token can 
      contain other tokens and rules.
        - Whitespace is NOT important for tokens.
        - :sigspace is off.
    
}#}}}


tut_example.p6 {#{{{
    http://doc.perl6.org/language/grammars#Action_Objects

    This works, and I now more or less understand it, but I didn't understand 
    it until I managed to get url_rule.p6 working.

    So run this if you want, but you're better off checking url_rule.p6 for 
    enlightenment before trying to understand this.
}#}}}
url.p6 {#{{{

    I got most of the code in here more or less from
        https://en.wikibooks.org/wiki/Perl_6_Programming/Grammars

    This contains three different grammars which all match the structure of a 
    URL.

    All three are variations on the same idea, matching a URL.

    Note the "proto" token in ProtoURL.

    Also note how I had to change the "subdomain" from a rule to a regex in 
    OptionalSubdomainURL.
    
}#}}}
url_rule.p6 (THIS IS THE IMPORTANT ONE) {#{{{
    
    Still messing with the URL grammar from ./url.p6 but now I'm actually 
    modifying the parsed string using an Actions class.

    This now works.  The script has some extensive comments at the bottom 
    explaining what's happening.

}#}}}


